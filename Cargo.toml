[package]
name = "nonos_kernel"
version = "0.2.0"
edition = "2021"
publish = false
license = "AGPL-3.0"
authors = ["eK@nonos.systems"]
description = "NØNOS ZeroState microkernel — RAM-resident, capability-enforced, signed capsules"
repository = "https://github.com/NON-OS/nonos-kernel"
build = "build.rs"

# Use the modern feature resolver to avoid accidental feature unification across the workspace
resolver = "2"

[[bin]]
name = "nonos_kernel"
path = "src/nonos_main.rs"

[lib]
name = "nonos_kernel_lib"
path = "src/lib.rs"
crate-type = ["staticlib", "rlib"]

######################################################################
# FEATURES 
# Notes:
# - default is a hardened, RAM-resident microkernel profile.
# - additional features are opt-in and grouped by domain.
######################################################################
[features]
# Release defaults (security-first, internal crypto, PQC enabled, RAM/VFS/CryptoFS on)
default = [
  # Kernel hardening
  "nonos-syscall-int80",  # syscall path (choose 1)
  "nonos-log-serial",     # serial logging by default
  "nonos-hash-sha3",      # internal SHA3
  "nonos-heap-guard",
  "nonos-wx-audit",
  "nonos-page-zero",
  "nonos-kaslr",
  "nonos-nx-stack",
  "nonos-smap-smep",
  "nonos-consttime",
  "nonos-cet",

  # Internal crypto stack
  "crypto-core",
  "crypto-aead", 
  "crypto-ed25519-int",
  
  # UI subsystem for production
  "ui",
  
  # Post-quantum cryptography
  "mlkem768",
  "mldsa3",
  
  # Zero-knowledge proof systems
  # "zk-halo2",    # Disabled for production no_std build
  # "zk-groth16",  # Disabled for production no_std build

  # PQC (ML-KEM-768 by default)
  "mlkem768",

  # Filesystem: RAM-only + VFS router + CryptoFS
  "fs-ram",
  "fs-vfs",
  "fs-cryptofs",

  # Networking (core interfaces)
  "net-core",

  # Architecture tag
  "arch-x86_64",
]

# Syscall gateways (select exactly one at a time)
nonos-syscall-int80 = []
nonos-syscall-msr   = []

# Logging backends
nonos-log-serial = []
nonos-log-vga    = []

# Memory & hardening toggles
nonos-heap-guard = []
nonos-wx-audit   = []
nonos-page-zero  = []
nonos-kaslr      = []
nonos-pcid       = []
nonos-nx-stack   = []
nonos-smap-smep  = []

# Arch/runtime toggles
nonos-apic = []
nonos-smp  = []
arch-x86_64 = []

# Capsule loader + crypto bindings (optional externals)
nonos-capsule-elf = ["xmas-elf"]
nonos-hash-sha3   = ["sha3"]
nonos-consttime   = ["subtle"]

# Crypto flavor (internal Ed25519 by default; dalek alternative opt-in)
nonos-crypto-ed25519 = ["crypto-ed25519-int"]

# Advanced hooks (kept OFF by default)
nonos-zk     = []
nonos-onion  = []
nonos-cet    = []
nonos-fallback-entry = []

# Runtime toggles referenced in code (satisfy unexpected_cfgs = "deny")
cli   = []
sched = []

# Networking & timers
net-log = []
relay_sendme_cell = []
relay_resolve_cell = []
arch_time_timer = []

# Internal crypto groups
crypto-core         = []
crypto-aead         = []
crypto-ed25519-int  = []
crypto-ed25519-dalek = ["ed25519-dalek"]  # optional

# PQC parameter sets (choose exactly one; default = mlkem768)
mlkem512  = []
mlkem768  = []
mlkem1024 = []

# Dilithium parameter sets  
mldsa2 = []
mldsa3 = []
mldsa5 = []

# Zero-knowledge proof systems
zk-halo2 = []
zk-groth16 = []

# Additional features
nonos-syscall-trace = []
ui = []

# Filesystem features
fs-ram      = []  # in-memory anonymous FS
fs-vfs      = []  # VFS router/mounts
fs-cryptofs = []  # RAM-only CryptoFS backend (/secure)
on_disk_fs  = []  # enable on-disk paths (requires drivers-*; OFF by default)

# Drivers (opt-in for on-disk FS / hardware)
drivers-ahci       = []
drivers-nvme       = []
drivers-virtio-blk = []
drivers-virtio-net = []

# Networking stack options
net-core    = []
net-sockets = []
net-ipv4    = []
net-ipv6    = []

# Memory subsystem extras
mem-slab       = []  # optional slab allocator
mem-pagecache  = []  # FS page cache (RAM-backed)

# Host-only: enable std for tools/tests when not building the kernel image
std = ["rand"]

######################################################################
# DEPENDENCIES — no_std-compatible by default
######################################################################
[dependencies]
# Architecture / memory mgmt
x86_64 = { version = "0.14", default-features = false, features = ["abi_x86_interrupt", "instructions"] }

# Synchronization primitives
spin = { version = "0.9", default-features = false, features = ["mutex", "spin_mutex", "lazy", "rwlock"] }
lazy_static = { version = "1.4", features = ["spin_no_std"] }

# Memory alloc + containers
linked_list_allocator = { version = "0.10", default-features = false, features = ["use_spin"] }
hashbrown = { version = "0.14", default-features = false }
arrayvec  = { version = "0.7",  default-features = false }
smallvec  = { version = "1.15", default-features = false }
bitvec    = { version = "1.0",  default-features = false, features = ["alloc"] }

# Crypto (optional externals retained for compatibility)
ed25519-dalek = { version = "1", default-features = false, features = ["u64_backend"], optional = true }
sha3           = { version = "0.10", default-features = false, optional = true }
subtle         = { version = "2.5",  default-features = false, optional = true }

# ELF capsule loader (optional)
xmas-elf = { version = "0.9", default-features = false, optional = true }

# Misc utils
bitflags = { version = "2.4", default-features = false }
cfg-if   = { version = "1.0", default-features = false }
volatile = { version = "0.4", default-features = false }
heapless = { version = "0.8", default-features = false }
blake3   = { version = "1.0", default-features = false }
bootloader_api = { version = "0.11", default-features = false }

# Network stack
smoltcp = { version = "0.11", default-features = false, features = ["alloc", "socket-raw", "socket-udp", "socket-tcp", "proto-ipv4", "proto-ipv6", "medium-ethernet"] }

# Host-only tooling/tests when `--features std`
rand = { version = "0.8", default-features = true, optional = true }

######################################################################
# TARGET-SPECIFIC OVERRIDES (bare-metal x86_64)
######################################################################
[target.'cfg(target_arch = "x86_64")'.dependencies]
# (reserved for arch-specific deps if/when needed)

######################################################################
# BUILD PROFILES — tuned for small, auditable kernels
######################################################################
[profile.dev]
panic = "abort"
opt-level = 0
lto = false
debug = true
codegen-units = 1
overflow-checks = true
incremental = true

# Keep external crypto libs fast even in dev.
[profile.dev.package."ed25519-dalek"]
opt-level = 3
[profile.dev.package."sha3"]
opt-level = 3

[profile.release]
panic = "abort"
opt-level = 3
lto = "fat"            # aggressive LTO for kernel
strip = "symbols"
debug = false
codegen-units = 1
overflow-checks = false
incremental = false
rpath = false

[profile.release.package."ed25519-dalek"]
opt-level = 3
[profile.release.package."sha3"]
opt-level = 3

######################################################################
# BUILD DEPENDENCIES — build.rs integrates PQClean + manifest signing
######################################################################
[build-dependencies]
blake3 = { version = "1.5", default-features = false }
cc    = "1.1"
glob  = "0.3"
# Required by build.rs for Ed25519 signing and SHA-512 digest
ed25519-dalek = { version = "1", default-features = false, features = ["u64_backend"] }
sha2          = { version = "0.10", default-features = false }

# Build scripts deterministic/minimal
[profile.dev.build-override]
opt-level = 0
[profile.release.build-override]
opt-level = "z"

######################################################################
# LINTS (Rust >= 1.75) 
######################################################################
[lints.rust]
unused_imports = "warn"
unused_variables = "warn"
missing_docs = "allow"
unreachable_pub = "warn"
unsafe_op_in_unsafe_fn = "warn"
# Deny unknown cfgs so features must be declared above
unexpected_cfgs = "deny"

######################################################################
# NONOS METADATA — machine-readable kernel contract
######################################################################
[package.metadata.nonos]
zerostate = true
vm = { higher_half = "0xffff_8000_0000_0000", heap_min = "2MiB" }
security = { wx = true, nx = true, smep = true, smap = true, kaslr = true, cet = true, stack_canaries = true }
caps = ["LOG","YIELD","TIME","IPC","KSTAT"]
abi.syscall.v0 = { numbers = [1, 2, 3, 5], names = ["LOG_WRITE","YIELD","TIME_NOW","KSTAT_READ"] }
capsule = { format = "ELF64", sections = [".text",".rodata",".data",".bss",".nonos.manifest",".nonos.sig"], sig = "ed25519", hash = "sha3-256" }
